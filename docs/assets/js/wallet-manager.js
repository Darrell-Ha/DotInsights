!function(h){"use strict";var t=dotinsights.BrowserUtil.isFirefox;const n="walletInfo",w={supportedWallets:{subwallet:{name:"SubWallet",type:"substrate",provider:"subwallet-js",logo:"",installUrl:t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"},"subwallet-evm":{name:"SubWallet - EVM",type:"evm",provider:"SubWallet",evmDetect:"isSubWallet",logo:"",installUrl:t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"}},currentWallet:null,currentWalletName:null,currentWalletType:"none",currentAddress:null,currentVoteAbility:!1,getSavedState:function(){var t=JSON.parse(localStorage.getItem(n))||{};return{currentWalletName:t.currentWalletName,currentAddress:t.currentAddress,currentSignMessage:t.currentSignMessage,currentVoteAbility:t.currentVoteAbility}},saveState:function(t){var e=w.getSavedState();t.hasOwnProperty("currentWalletName")&&(w.currentWalletName=t.currentWalletName,e.currentWalletName=t.currentWalletName),t.hasOwnProperty("currentAddress")&&(w.currentAddress=t.currentAddress,e.currentAddress=t.currentAddress),t.hasOwnProperty("currentSignMessage")&&(w.currentSignMessage=t.currentSignMessage,e.currentSignMessage=t.currentSignMessage),t.hasOwnProperty("currentVoteAbility")&&(w.currentVoteAbility=t.currentVoteAbility,e.currentVoteAbility=t.currentVoteAbility),localStorage.setItem(n,JSON.stringify(e))},resetState:function(){w.saveState({currentWalletName:null,currentAddress:null,currentSignMessage:void 0,currentVoteAbility:!1})},loadSavedState:function(){var t=w.getSavedState();Object.assign(w,t)},getCurrentWallet:async function(){if(w.loadSavedState(),w.currentWalletName&&w.currentAddress)return w.enableWallet(w.currentWalletName)},isInstall:function(t){return!!w.getWallet(t)},isConnectedWithWallet:async function(){return!!await dotinsights.walletUtils.getCurrentWallet()},getWallet:function(t){t=w.supportedWallets[t];if(t)return"evm"!==t.type?window.injectedWeb3&&window.injectedWeb3[t.provider]:window[t.provider]&&window[t.provider][t.evmDetect]?window[t.provider]:void 0},enableWallet:async function(n){const s=w.supportedWallets[n];if(!s)throw new Error("Wallet is not support");const r=w.getWallet(n);if(!r)throw new Error("Wallet is not install");return new Promise(function(e,t){!async function(){return"evm"===s.type?r.request({method:"eth_requestAccounts"}):r.enable()}().then(async t=>{w.currentWalletType=s.type,"evm"===s.type?w.currentWallet=r:w.currentWallet=t,w.currentWalletName!==n&&w.saveState({currentWalletName:n,currentAddress:void 0,currentSignMessage:void 0,currentVoteAbility:!1});t=await w.getAccounts();t.map(t=>t.address).indexOf(w.currentAddress)<0&&t[0]&&t[0].address&&(w.enableAccount(t[0].address),w.saveState({currentAddress:t[0].address})),e(w.currentWallet)}).catch(()=>{alert("User cancel or reject connect to the wallet"),t(new Error("User cancel or reject connect to the wallet"))})})},getAccounts:async function(){return w.currentWallet||await w.getCurrentWallet(),"evm"===w.currentWalletType?(await w.currentWallet.request({method:"eth_accounts"})).map(t=>({address:t,name:t})):w.currentWallet.accounts.get()},enableAccount:function(t){w.currentAddress!==t&&w.saveState({currentAddress:t,currentSignMessage:void 0,currentVoteAbility:!1})},getSignMessage:async function(t){t=(await dotinsights.requestUtils.sendPost(dotinsights.Helpers.getApiEndpointUrl("getMessage"),{address:t})).message;w.saveState({currentSignMessage:t,currentVoteAbility:!0})},signMessage:async function(t){if(w.currentWallet||w.currentAddress)return"evm"===w.currentWalletType?w.currentWallet.request({method:"personal_sign",params:[t,w.currentAddress]}):w.currentWallet.signer.signRaw({address:w.currentAddress,data:t});throw new Error("Unable get current wallet or current account to sign message")},signVote:async function(t){try{if(w.currentWallet||await w.getCurrentWallet(),w.currentSignMessage&&w.currentVoteAbility||await w.getSignMessage(w.currentAddress),w.currentVoteAbility)return(await w.signMessage(w.currentSignMessage+"-"+t)).signature;throw new Error("Unable to vote, required has balance on at least one chain in ecosystem")}catch(t){return console.error(t),!1}},runTestOnLoadPage(){setTimeout(async function(){w.loadSavedState();try{await w.isConnectedWithWallet()?(console.log("Enable existed wallet"),await w.enableWallet(w.currentWalletName),await w.getAccounts(),await w.currentAddress):console.log("Not connect with wallet")}catch(t){console.error("Connect wallet error: "+t.message)}},500)},runTestSelectWallet:function(){w.supportedWallets,Object.entries(w.supportedWallets).forEach(function([t,e]){console.log(e.name,w.isInstall(t)),console.log(e.name,t===w.currentWalletName)});w.enable("subwallet")},runTestSelectAccount:async function(){var t=await w.getAccounts();w.enableAccount(t[0].address)},runTestVoteProject:async function(){var t=await w.signVote("ProjectID");console.log(t)}};window.dotinsights=window.dotinsights||{},dotinsights.walletUtils=w,dotinsights.VotedProjects=[];var g=dotinsights.Helpers,p=h("#modal-connect-wallet"),v=p.find(".modal-content-body"),e=(p.dotinsightsModal(),h(document).ready(function(){h(document.body).on("click",".btn-connect-wallet",function(t){t.preventDefault();var e=h(this);g.setElementHandling(e),setTimeout(async function(){var t=e.data("wallet");console.log(t);try{await w.enableWallet(t),r()}catch(t){console.error(t),g.unsetElementHandling(e)}},500)}),h(document.body).on("click",".btn-disconnect-wallet",function(t){t.preventDefault();t=h(this);g.setElementHandling(t),setTimeout(function(){w.resetState(),r()},500)}),r()}),Date.UTC(2022,10,18,23,59,59)),s=h("#modal-vote-coming");function r(){setTimeout(async function(){w.loadSavedState();try{if(await w.isConnectedWithWallet()){console.log("Enable existed wallet"),await w.enableWallet(w.currentWalletName);var t=await w.getAccounts(),e=await w.currentAddress,n=null,s="";console.log(t),console.log(e);for(var r=0;r<t.length;r++){var a=t[r],o="wallet-account-address";a.address===e&&(o+=" selected-account",n=a),s+=`<div class="${o}" data-address="${a.address}">
									<div class="wallet-icon"></div>
	                                <div id="wallet-info">
	                                    <div class="wallet-name">${a.name}</div>
	                                    <div class="wallet-address"><span>${a.address}</span></div>
	                                </div>
								</div>`}s+='<div class="button-wrap btn-disconnect-wallet-wrap"><a href="#" class="button btn-disconnect-wallet"><span class="button-text">Disconnect</span></a></div>',h(".btn-open-connect-wallet").find(".button-text span").text(n.name),p.find(".modal-title").text("Choose account"),v.empty().html(s),m(e)}else{console.log("Not connect with wallet");var l,s="";for(l in w.supportedWallets){var i=w.supportedWallets[l],c=w.isInstall(l),d=c?"#":i.installUrl,u=c?"":'<span class="button-icon"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.0625 10.3135L12 14.2499L15.9375 10.3135" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M12 3.75V14.2472" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M20.25 14.25V19.5C20.25 19.6989 20.171 19.8897 20.0303 20.0303C19.8897 20.171 19.6989 20.25 19.5 20.25H4.5C4.30109 20.25 4.11032 20.171 3.96967 20.0303C3.82902 19.8897 3.75 19.6989 3.75 19.5V14.25" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg></span>',g="button button--wallet wallet--"+l;s+=`<a data-wallet="${l}" href="${d}" class="${g+=c?" btn-connect-wallet":" button-right-icon btn-install-wallet"}" ${c?"":' target="_blank"'}><span class="button-text">${i.name}</span>${u}</a>`}h(".btn-open-connect-wallet").find(".button-text span").text("Connect Wallet"),v.empty().html(s),p.find(".modal-title").text("Connect Your Wallet")}}catch(t){console.error("Connect wallet error: "+t.message)}},500)}function m(t){h.ajax({method:"POST",url:g.getApiEndpointUrl("getVotedProject"),data:{address:t},success:function(t){dotinsights.VotedProjects=t,h(document.body).trigger("dotinsights/VotedProjects/Refreshed")}})}h(document.body).on("click",".btn-vote",function(t){var d,u;t.preventDefault(),e>Date.now()?s.dotinsightsModal("open"):(d=h(this),u=d.data("project-id"),w.isConnectedWithWallet()?(g.setElementHandling(d),async function(){try{var t,e,n,s,r,a,o,l,i=await w.signVote(u);const c=await dotinsights.requestUtils.sendPost(g.getApiEndpointUrl("toggleVoteProject"),{project_id:u,address:w.currentAddress,signature:i});g.unsetElementHandling(d),c.hasOwnProperty("vote_count")?(dotinsights.Projects=dotinsights.Projects.map(t=>t.project_id===u?{...t,vote_count:c.vote_count}:t),(t=h('.btn-vote[data-project-id="'+u+'"]')).find(".button-text").text(c.vote_count),c.isVote?(t.removeClass("vote-this").addClass("unvote-this"),dotinsights.VotedProjects.length<1&&(n=(e=h("#modal-first-vote-notice")).find(".btn-twitter-share"),s=`I love ${d.closest(".row-project").find(".project-name").text()} so much I voted for this project on the @Polkadot and @Kusamanetwork Ecosystem Map by @dotinsights! What about you? Come vote for your favorite projects and earn a free NFTðŸŽ‰`,r=(r=(r="https://twitter.com/share?text={text}&amp;url={url}").replace("{text}",s)).replace("{url}",location.origin+"/most-loved-projects"),n.attr("href",encodeURI(r)),e.dotinsightsModal("open")),-1===dotinsights.VotedProjects.indexOf(u)&&dotinsights.VotedProjects.push(u)):(t.removeClass("unvote-this").addClass("vote-this"),-1<(a=dotinsights.VotedProjects.indexOf(u))&&dotinsights.VotedProjects.splice(a,1))):(o=h("#modal-vote-error"),l=c.message||"Something went wrong!",o.find(".vote-error-message").text(l),o.dotinsightsModal("open"))}catch(t){g.unsetElementHandling(d)}}()):p.dotinsightsModal("open"))}),h(document.body).on("click",".wallet-account-address",async function(t){if(t.preventDefault(),!h(this).hasClass("selected-account"))for(var e=await w.getAccounts(),n=h(this).data("address"),s=0;s<e.length;s++)if(n===e[s].address){w.enableAccount(n),h(this).siblings().removeClass("selected-account"),h(this).addClass("selected-account"),h(".btn-open-connect-wallet").find(".button-text span").text(e[s].name),m(n),p.dotinsightsModal("close");break}}),h(document.body).on("dotinsights/VotedProjects/Refreshed",function(){if(h(".btn-vote").addClass("vote-this").removeClass("unvote-this"),0<dotinsights.VotedProjects.length)for(var t=0;t<dotinsights.VotedProjects.length;t++)h('.btn-vote[data-project-id="'+dotinsights.VotedProjects[t]+'"]').removeClass("vote-this").addClass("unvote-this")})}(jQuery);