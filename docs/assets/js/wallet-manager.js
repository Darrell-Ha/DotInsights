!function(u){"use strict";const t=dotinsights.BrowserUtil.isFirefox,e=dotinsights.Helpers.isHandheld();const n="dotinsightsWalletInfo",g={supportedWallets:{subwallet:{name:"SubWallet",type:"substrate",provider:"subwallet-js",logo:"",getInstallUrl:function(){return e?"https://mobile.subwallet.app":t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"}},"subwallet-evm":{name:"SubWallet - EVM",type:"evm",provider:"SubWallet",evmDetect:"isSubWallet",logo:"",getInstallUrl:function(){return e?"https://mobile.subwallet.app":t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"}}},currentWallet:null,currentWalletName:null,currentWalletType:"none",currentAddress:null,currentVoteAbility:!1,getSavedState:function(){var t=JSON.parse(localStorage.getItem(n))||{};return{currentWalletName:t.currentWalletName,currentAddress:t.currentAddress,currentSignMessage:t.currentSignMessage,currentVoteAbility:t.currentVoteAbility}},saveState:function(t){var e=g.getSavedState();t.hasOwnProperty("currentWalletName")&&(g.currentWalletName=t.currentWalletName,e.currentWalletName=t.currentWalletName),t.hasOwnProperty("currentAddress")&&(g.currentAddress=t.currentAddress,e.currentAddress=t.currentAddress),t.hasOwnProperty("currentSignMessage")&&(g.currentSignMessage=t.currentSignMessage,e.currentSignMessage=t.currentSignMessage),t.hasOwnProperty("currentVoteAbility")&&(g.currentVoteAbility=t.currentVoteAbility,e.currentVoteAbility=t.currentVoteAbility),localStorage.setItem(n,JSON.stringify(e))},resetState:function(){g.saveState({currentWalletName:null,currentAddress:null,currentSignMessage:void 0,currentVoteAbility:!1})},loadSavedState:function(){var t=g.getSavedState();Object.assign(g,t)},getCurrentWallet:async function(){if(g.loadSavedState(),g.currentWalletName&&g.currentAddress)return g.enableWallet(g.currentWalletName)},isInstall:function(t){return!!g.getWallet(t)},isConnectedWithWallet:async function(){return!!await dotinsights.walletUtils.getCurrentWallet()},getWallet:function(t){t=g.supportedWallets[t];if(t)return"evm"!==t.type?window.injectedWeb3&&window.injectedWeb3[t.provider]:window[t.provider]&&window[t.provider][t.evmDetect]?window[t.provider]:void 0},enableWallet:async function(n){const r=g.supportedWallets[n];if(!r)throw new Error("Wallet is not support");const s=g.getWallet(n);if(!s)throw new Error("Wallet is not install");return new Promise(function(e,t){!async function(){return"evm"===r.type?s.request({method:"eth_requestAccounts"}):s.enable()}().then(async t=>{g.currentWalletType=r.type,"evm"===r.type?g.currentWallet=s:g.currentWallet=t,g.currentWalletName!==n&&g.saveState({currentWalletName:n,currentAddress:void 0,currentSignMessage:void 0,currentVoteAbility:!1});t=await g.getAccounts();t.map(t=>t.address).indexOf(g.currentAddress)<0&&t[0]&&t[0].address&&(g.enableAccount(t[0].address),g.saveState({currentAddress:t[0].address})),e(g.currentWallet)}).catch(()=>{w("User cancel or reject connect to the wallet"),t(new Error("User cancel or reject connect to the wallet"))})})},getAccounts:async function(){return g.currentWallet||await g.getCurrentWallet(),"evm"===g.currentWalletType?(await g.currentWallet.request({method:"eth_accounts"})).map(t=>({address:t,name:t})):g.currentWallet.accounts.get()},enableAccount:function(t){g.currentAddress!==t&&g.saveState({currentAddress:t,currentSignMessage:void 0,currentVoteAbility:!1})},getSignMessage:async function(t){t=(await dotinsights.requestUtils.sendPost(dotinsights.Helpers.getApiEndpointUrl("getMessage"),{address:t})).message;g.saveState({currentSignMessage:t,currentVoteAbility:!0})},signMessage:async function(t){if(g.currentWallet||g.currentAddress)return"evm"===g.currentWalletType?g.currentWallet.request({method:"personal_sign",params:[t,g.currentAddress]}):g.currentWallet.signer.signRaw({address:g.currentAddress,data:t});throw new Error("Unable get current wallet or current account to sign message")},signVote:async function(t){try{if(g.currentWallet||await g.getCurrentWallet(),g.currentSignMessage&&g.currentVoteAbility||await g.getSignMessage(g.currentAddress),!g.currentVoteAbility)throw new Error("Unable to vote, required has balance on at least one chain in ecosystem");var e=await g.signMessage(g.currentSignMessage+"-"+t),n="object"==typeof e?e.signature:e;if("string"!=typeof n)throw new Error("Invalid signature");return n}catch(t){return console.error(t),!1}},runTestOnLoadPage(){setTimeout(async function(){g.loadSavedState();try{await g.isConnectedWithWallet()?(console.log("Enable existed wallet"),await g.enableWallet(g.currentWalletName),await g.getAccounts(),await g.currentAddress):console.log("Not connect with wallet")}catch(t){console.error("Connect wallet error: "+t.message)}},500)},runTestSelectWallet:function(){g.supportedWallets,Object.entries(g.supportedWallets).forEach(function([t,e]){console.log(e.name,g.isInstall(t)),console.log(e.name,t===g.currentWalletName)});g.enable("subwallet")},runTestSelectAccount:async function(){var t=await g.getAccounts();g.enableAccount(t[0].address)},runTestVoteProject:async function(){var t=await g.signVote("ProjectID");console.log(t)}};window.dotinsights=window.dotinsights||{},dotinsights.walletUtils=g,dotinsights.VotedProjects=[];var h=dotinsights.Helpers,p=u("#modal-connect-wallet"),r=u("#modal-show-error"),l=p.find(".modal-content-body");function s(){setTimeout(async function(){g.loadSavedState();try{(await g.isConnectedWithWallet()?(await g.enableWallet(g.currentWalletName),"evm"===g.currentWalletType&&g.currentWallet.on("accountsChanged",t=>{(1===t.length||1<t.length&&!t.includes(g.currentAddress))&&g.enableAccount(t[0]),o()}),o):a)()}catch(t){console.error("Connect wallet error: "+t.message),a()}},500)}function a(){var t,e="";for(t in g.supportedWallets){var n=g.supportedWallets[t],r=g.isInstall(t),s="button button--wallet wallet--"+t;e+=`<a data-wallet="${t}" href="${r?"#":n.getInstallUrl()}" class="${s+=r?" btn-connect-wallet":" button-right-icon btn-install-wallet"}" ${r?"":' target="_blank"'}><span class="button-text">${n.name}</span>${r?"":'<span class="button-icon"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.0625 10.3135L12 14.2499L15.9375 10.3135" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M12 3.75V14.2472" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M20.25 14.25V19.5C20.25 19.6989 20.171 19.8897 20.0303 20.0303C19.8897 20.171 19.6989 20.25 19.5 20.25H4.5C4.30109 20.25 4.11032 20.171 3.96967 20.0303C3.82902 19.8897 3.75 19.6989 3.75 19.5V14.25" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg></span>'}</a>`}u(".btn-open-connect-wallet").find(".button-text span").text("Connect Wallet"),l.empty().html(e),p.find(".modal-title").text("Connect Your Wallet")}async function o(){for(var t=await g.getAccounts(),e=await g.currentAddress,n=null,r="",s=0;s<t.length;s++){var a=t[s],o="wallet-account-address";a.address===e&&(o+=" selected-account",n=a),r+=`<div class="${o}" data-address="${a.address}">
								<div class="wallet-icon"></div>
                                <div id="wallet-info">
                                    <div class="wallet-name text-1-row"><span>${a.name}</span></div>
                                    <div class="wallet-address text-1-row"><span>${a.address}</span></div>
                                </div>
							</div>`}r+='<div class="button-wrap btn-disconnect-wallet-wrap"><a href="#" class="button btn-disconnect-wallet"><span class="button-text">Disconnect</span></a></div>',u(".btn-open-connect-wallet").find(".button-text span").text(n.name),p.find(".modal-title").text("Choose account"),l.empty().html(r),i(e)}function i(t){u.ajax({method:"POST",url:h.getApiEndpointUrl("getVotedProject"),data:{address:t},success:function(t){dotinsights.VotedProjects=t,u(document.body).trigger("dotinsights/VotedProjects/Refreshed")}})}function w(t){r.find(".modal-error-message").text(t),r.dotinsightsModal("open")}p.dotinsightsModal(),u(document).ready(function(){u(document.body).on("click",".btn-connect-wallet",function(t){t.preventDefault();var e=u(this);h.setElementHandling(e),setTimeout(async function(){var t=e.data("wallet");try{await g.enableWallet(t),s()}catch(t){console.error(t),h.unsetElementHandling(e)}},500)}),u(document.body).on("click",".btn-disconnect-wallet",function(t){t.preventDefault();t=u(this);h.setElementHandling(t),setTimeout(function(){g.resetState(),s()},500)}),u(document.body).on("click",".btn-vote",function(t){t.preventDefault(),t.stopPropagation(),async function(e){var n=e.data("project-id");var t=await g.isConnectedWithWallet();if(t){h.setElementHandling(e);try{var r,s,a,o,l,i,c=await g.signVote(n);if(!c)throw"Invalid Signature";const d=await dotinsights.requestUtils.sendPost(h.getApiEndpointUrl("toggleVoteProject"),{project_id:n,address:g.currentAddress,signature:c});h.unsetElementHandling(e),d.hasOwnProperty("vote_count")?(dotinsights.Projects=dotinsights.Projects.map(t=>t.project_id===n?{...t,vote_count:d.vote_count}:t),(r=u('.btn-vote[data-project-id="'+n+'"]')).find(".button-text").text(d.vote_count),d.isVote?(r.removeClass("vote-this").addClass("unvote-this"),dotinsights.VotedProjects.length<1&&(s=u("#modal-first-vote-notice"),a=s.find(".btn-twitter-share"),o=`I love ${e.closest(".row-project").find(".project-name").text()} so much I voted for this project on the @Polkadot and @Kusamanetwork Ecosystem Map by @dotinsights_xyz! What about you? Come vote for your favorite projects and earn a free NFTðŸŽ‰`,l=(l=(l="https://twitter.com/intent/tweet?text={text}&url={url}").replace("{text}",encodeURI(o))).replace("{url}",encodeURI(location.origin+"/most-loved-projects/")),a.attr("href",l),s.dotinsightsModal("open")),-1===dotinsights.VotedProjects.indexOf(n)&&dotinsights.VotedProjects.push(n)):(r.removeClass("unvote-this").addClass("vote-this"),-1<(i=dotinsights.VotedProjects.indexOf(n))&&dotinsights.VotedProjects.splice(i,1))):w(d.message||"Something went wrong!")}catch(t){h.unsetElementHandling(e)}}else p.dotinsightsModal("open")}(u(this))}),u(document.body).on("click",".wallet-account-address",function(t){t.preventDefault(),t.stopPropagation(),u(this).hasClass("selected-account")||async function(t){var e=await g.getAccounts();for(var n=t.data("address"),r=0;r<e.length;r++)if(n===e[r].address){g.enableAccount(n),t.siblings().removeClass("selected-account"),t.addClass("selected-account"),u(".btn-open-connect-wallet").find(".button-text span").text(e[r].name),i(n),p.dotinsightsModal("close");break}}(u(this))}),s()}),u(document.body).on("dotinsights/VotedProjects/Refreshed",function(){if(u(".btn-vote").addClass("vote-this").removeClass("unvote-this"),0<dotinsights.VotedProjects.length)for(var t=0;t<dotinsights.VotedProjects.length;t++)u('.btn-vote[data-project-id="'+dotinsights.VotedProjects[t]+'"]').removeClass("vote-this").addClass("unvote-this")})}(jQuery);