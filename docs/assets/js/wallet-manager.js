!function(g){"use strict";const t=dotinsights.BrowserUtil.isFirefox,e=dotinsights.Helpers.isHandheld();const n="dotinsightsWalletInfo",h={supportedWallets:{subwallet:{name:"SubWallet",type:"substrate",provider:"subwallet-js",logo:"",getInstallUrl:function(){return e?"https://mobile.subwallet.app":t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"}},"subwallet-evm":{name:"SubWallet - EVM",type:"evm",provider:"SubWallet",evmDetect:"isSubWallet",logo:"",getInstallUrl:function(){return e?"https://mobile.subwallet.app":t?"https://mzl.la/3rQ0awW":"https://bit.ly/3BGqFt1"}}},currentWallet:null,currentWalletName:null,currentWalletType:"none",currentAddress:null,currentVoteAbility:!1,getSavedState:function(){var t=JSON.parse(localStorage.getItem(n))||{};return{currentWalletName:t.currentWalletName,currentAddress:t.currentAddress,currentSignMessage:t.currentSignMessage,currentVoteAbility:t.currentVoteAbility}},saveState:function(t){var e=h.getSavedState();t.hasOwnProperty("currentWalletName")&&(h.currentWalletName=t.currentWalletName,e.currentWalletName=t.currentWalletName),t.hasOwnProperty("currentAddress")&&(h.currentAddress=t.currentAddress,e.currentAddress=t.currentAddress),t.hasOwnProperty("currentSignMessage")&&(h.currentSignMessage=t.currentSignMessage,e.currentSignMessage=t.currentSignMessage),t.hasOwnProperty("currentVoteAbility")&&(h.currentVoteAbility=t.currentVoteAbility,e.currentVoteAbility=t.currentVoteAbility),localStorage.setItem(n,JSON.stringify(e))},resetState:function(){h.saveState({currentWalletName:null,currentAddress:null,currentSignMessage:void 0,currentVoteAbility:!1})},loadSavedState:function(){var t=h.getSavedState();Object.assign(h,t)},getCurrentWallet:async function(){if(h.loadSavedState(),h.currentWalletName&&h.currentAddress)return h.enableWallet(h.currentWalletName)},isInstall:function(t){return!!h.getWallet(t)},isConnectedWithWallet:async function(){return!!await dotinsights.walletUtils.getCurrentWallet()},getWallet:function(t){t=h.supportedWallets[t];if(t)return"evm"!==t.type?window.injectedWeb3&&window.injectedWeb3[t.provider]:window[t.provider]&&window[t.provider][t.evmDetect]?window[t.provider]:void 0},enableWallet:async function(n){const s=h.supportedWallets[n];if(!s)throw new Error("Wallet is not support");const r=h.getWallet(n);if(!r)throw new Error("Wallet is not install");return new Promise(function(e,t){!async function(){return"evm"===s.type?r.request({method:"eth_requestAccounts"}):r.enable()}().then(async t=>{h.currentWalletType=s.type,"evm"===s.type?h.currentWallet=r:h.currentWallet=t,h.currentWalletName!==n&&h.saveState({currentWalletName:n,currentAddress:void 0,currentSignMessage:void 0,currentVoteAbility:!1});t=await h.getAccounts();t.map(t=>t.address).indexOf(h.currentAddress)<0&&t[0]&&t[0].address&&(h.enableAccount(t[0].address),h.saveState({currentAddress:t[0].address})),e(h.currentWallet)}).catch(()=>{alert("User cancel or reject connect to the wallet"),t(new Error("User cancel or reject connect to the wallet"))})})},getAccounts:async function(){return h.currentWallet||await h.getCurrentWallet(),"evm"===h.currentWalletType?(await h.currentWallet.request({method:"eth_accounts"})).map(t=>({address:t,name:t})):h.currentWallet.accounts.get()},enableAccount:function(t){h.currentAddress!==t&&h.saveState({currentAddress:t,currentSignMessage:void 0,currentVoteAbility:!1})},getSignMessage:async function(t){t=(await dotinsights.requestUtils.sendPost(dotinsights.Helpers.getApiEndpointUrl("getMessage"),{address:t})).message;h.saveState({currentSignMessage:t,currentVoteAbility:!0})},signMessage:async function(t){if(h.currentWallet||h.currentAddress)return"evm"===h.currentWalletType?h.currentWallet.request({method:"personal_sign",params:[t,h.currentAddress]}):h.currentWallet.signer.signRaw({address:h.currentAddress,data:t});throw new Error("Unable get current wallet or current account to sign message")},signVote:async function(t){try{if(h.currentWallet||await h.getCurrentWallet(),h.currentSignMessage&&h.currentVoteAbility||await h.getSignMessage(h.currentAddress),!h.currentVoteAbility)throw new Error("Unable to vote, required has balance on at least one chain in ecosystem");var e=await h.signMessage(h.currentSignMessage+"-"+t),n="object"==typeof e?e.signature:e;if("string"!=typeof n)throw new Error("Invalid signature");return n}catch(t){return console.error(t),!1}},runTestOnLoadPage(){setTimeout(async function(){h.loadSavedState();try{await h.isConnectedWithWallet()?(console.log("Enable existed wallet"),await h.enableWallet(h.currentWalletName),await h.getAccounts(),await h.currentAddress):console.log("Not connect with wallet")}catch(t){console.error("Connect wallet error: "+t.message)}},500)},runTestSelectWallet:function(){h.supportedWallets,Object.entries(h.supportedWallets).forEach(function([t,e]){console.log(e.name,h.isInstall(t)),console.log(e.name,t===h.currentWalletName)});h.enable("subwallet")},runTestSelectAccount:async function(){var t=await h.getAccounts();h.enableAccount(t[0].address)},runTestVoteProject:async function(){var t=await h.signVote("ProjectID");console.log(t)}};window.dotinsights=window.dotinsights||{},dotinsights.walletUtils=h,dotinsights.VotedProjects=[];var w=dotinsights.Helpers,p=g("#modal-connect-wallet"),l=p.find(".modal-content-body");function s(){setTimeout(async function(){h.loadSavedState();try{if(await h.isConnectedWithWallet()){await h.enableWallet(h.currentWalletName);for(var t=await h.getAccounts(),e=await h.currentAddress,n=null,s="",r=0;r<t.length;r++){var a=t[r],o="wallet-account-address";a.address===e&&(o+=" selected-account",n=a),s+=`<div class="${o}" data-address="${a.address}">
									<div class="wallet-icon"></div>
	                                <div id="wallet-info">
	                                    <div class="wallet-name text-1-row"><span>${a.name}</span></div>
	                                    <div class="wallet-address text-1-row"><span>${a.address}</span></div>
	                                </div>
								</div>`}s+='<div class="button-wrap btn-disconnect-wallet-wrap"><a href="#" class="button btn-disconnect-wallet"><span class="button-text">Disconnect</span></a></div>',g(".btn-open-connect-wallet").find(".button-text span").text(n.name),p.find(".modal-title").text("Choose account"),l.empty().html(s),c(e)}else i()}catch(t){console.error("Connect wallet error: "+t.message),i()}},500)}function i(){var t,e="";for(t in h.supportedWallets){var n=h.supportedWallets[t],s=h.isInstall(t),r="button button--wallet wallet--"+t;e+=`<a data-wallet="${t}" href="${s?"#":n.getInstallUrl()}" class="${r+=s?" btn-connect-wallet":" button-right-icon btn-install-wallet"}" ${s?"":' target="_blank"'}><span class="button-text">${n.name}</span>${s?"":'<span class="button-icon"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.0625 10.3135L12 14.2499L15.9375 10.3135" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M12 3.75V14.2472" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M20.25 14.25V19.5C20.25 19.6989 20.171 19.8897 20.0303 20.0303C19.8897 20.171 19.6989 20.25 19.5 20.25H4.5C4.30109 20.25 4.11032 20.171 3.96967 20.0303C3.82902 19.8897 3.75 19.6989 3.75 19.5V14.25" stroke="#66E1B6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg></span>'}</a>`}g(".btn-open-connect-wallet").find(".button-text span").text("Connect Wallet"),l.empty().html(e),p.find(".modal-title").text("Connect Your Wallet")}function c(t){g.ajax({method:"POST",url:w.getApiEndpointUrl("getVotedProject"),data:{address:t},success:function(t){dotinsights.VotedProjects=t,g(document.body).trigger("dotinsights/VotedProjects/Refreshed")}})}p.dotinsightsModal(),g(document).ready(function(){g(document.body).on("click",".btn-connect-wallet",function(t){t.preventDefault();var e=g(this);w.setElementHandling(e),setTimeout(async function(){var t=e.data("wallet");try{await h.enableWallet(t),s()}catch(t){console.error(t),w.unsetElementHandling(e)}},500)}),g(document.body).on("click",".btn-disconnect-wallet",function(t){t.preventDefault();t=g(this);w.setElementHandling(t),setTimeout(function(){h.resetState(),s()},500)}),s()}),g(document.body).on("click",".btn-vote",async function(e){e.preventDefault();var e=g(this),n=e.data("project-id");if(await h.isConnectedWithWallet()){w.setElementHandling(e);try{var t,s,r,a,o,l,i,c,d=await h.signVote(n);if(!d)throw"Invalid Signature";const u=await dotinsights.requestUtils.sendPost(w.getApiEndpointUrl("toggleVoteProject"),{project_id:n,address:h.currentAddress,signature:d});w.unsetElementHandling(e),u.hasOwnProperty("vote_count")?(dotinsights.Projects=dotinsights.Projects.map(t=>t.project_id===n?{...t,vote_count:u.vote_count}:t),(t=g('.btn-vote[data-project-id="'+n+'"]')).find(".button-text").text(u.vote_count),u.isVote?(t.removeClass("vote-this").addClass("unvote-this"),dotinsights.VotedProjects.length<1&&(r=(s=g("#modal-first-vote-notice")).find(".btn-twitter-share"),a=`I love ${e.closest(".row-project").find(".project-name").text()} so much I voted for this project on the @Polkadot and @Kusamanetwork Ecosystem Map by @dotinsights_xyz! What about you? Come vote for your favorite projects and earn a free NFTðŸŽ‰`,o=(o=(o="https://twitter.com/intent/tweet?text={text}&url={url}").replace("{text}",encodeURI(a))).replace("{url}",encodeURI(location.origin+"/most-loved-projects/")),r.attr("href",o),s.dotinsightsModal("open")),-1===dotinsights.VotedProjects.indexOf(n)&&dotinsights.VotedProjects.push(n)):(t.removeClass("unvote-this").addClass("vote-this"),-1<(l=dotinsights.VotedProjects.indexOf(n))&&dotinsights.VotedProjects.splice(l,1))):(i=g("#modal-vote-error"),c=u.message||"Something went wrong!",i.find(".vote-error-message").text(c),i.dotinsightsModal("open"))}catch(t){w.unsetElementHandling(e)}}else p.dotinsightsModal("open")}),g(document.body).on("click",".wallet-account-address",async function(t){if(t.preventDefault(),!g(this).hasClass("selected-account"))for(var e=await h.getAccounts(),n=g(this).data("address"),s=0;s<e.length;s++)if(n===e[s].address){h.enableAccount(n),g(this).siblings().removeClass("selected-account"),g(this).addClass("selected-account"),g(".btn-open-connect-wallet").find(".button-text span").text(e[s].name),c(n),p.dotinsightsModal("close");break}}),g(document.body).on("dotinsights/VotedProjects/Refreshed",function(){if(g(".btn-vote").addClass("vote-this").removeClass("unvote-this"),0<dotinsights.VotedProjects.length)for(var t=0;t<dotinsights.VotedProjects.length;t++)g('.btn-vote[data-project-id="'+dotinsights.VotedProjects[t]+'"]').removeClass("vote-this").addClass("unvote-this")})}(jQuery);